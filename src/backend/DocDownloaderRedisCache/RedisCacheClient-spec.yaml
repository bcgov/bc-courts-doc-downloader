openapi: 3.0.0
info:
  version: 0.0.1
  title: Courts Document Downloader Redis Cache Client
  description: Courts File Download Redis Cache Client 
servers:
  - url: "http://localhost:8080"
tags:
  - name: Document Downloader Redis Cache Client
paths:
  /jobs:
   get:
      summary: get all Jobs  
      tags: 
        - Jobs view
      description: Jobs view Status Request
      responses:
        '200':
          description: 'Status returned successfully'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/jobsstatus_response"
  /jobs/{jobId}:
   get:
      summary: get a Job by ID 
      tags: 
        - Jobs view
      description: Returns a single Job
      operationId: getJobById
      parameters:
        - name: jobId
          in: path
          description: ID of job to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Status returned successfully'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/jobstatus_response"
  /job:
    post:
      tags:
        - Job Create/Update
      summary: Add a new Job to the repo
      description: Add a new Job to the repo
      operationId: postJob
      requestBody:
        description: Add a new Job in the repo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addjob_response' 
    put:
      tags:
        - Job Create/Update
      summary: Update a Job from the repo
      description: Update Job from the repo
      operationId: updateJob
      requestBody:
        description: Update a Job in the repo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updatejob_response' 
  /job/{jobId}:
   delete:
      summary: delete a Job by ID 
      tags: 
        - Job delete
      description: Delete a single Job
      operationId: deleteJob
      parameters:
        - name: jobId
          in: path
          description: ID of job to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Status returned successfully'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deletejob_response"
                
components:
  schemas:
    jobsstatus_response:
      type: string
    jobstatus_response:
      type: string
    addjob_response:
      type: string
    updatejob_response:
      type: string
    deletejob_response:
      type: string
    Job:
      type: object
      properties:
        id:
          type: string
          example: example
        guid:
          type: string
          example: example
        applicationId:
          type: string
          example: example
        putId:
          type: string
          example: example
        ordsTimeout:
          type: boolean
        graphTimeout:
          type: boolean
        checksum:
          type: string
          example: example
        graphSessionId:
          type: string
          example: example
        error:
          type: boolean
        lastErrorMessage:
          type: string
          example: example
        startDelivery:
          type: string
          example: example
        endDelivery:
          type: string
          example: example
        percentageComplete:
          type: integer
          format: int64
          example: 100
        fileName:
          type: string
          example: example
        mimeType:
          type: string
          example: example